-- Produce a piece of `String` describing the value.
Describe : value => trait (value -> String)

-- Can't describe [`value`].
--
-- You can't display [`value`] on the screen or use it in placeholders because
-- it can't be converted into a string.
[default] [error] instance (Describe value)

-- Display a value on the screen.
show :: value -> () where (Describe value) (value :: String)
show : value -> intrinsic "display" (Describe value)


instance (Describe String) : string -> string
instance (Describe Number) : n -> intrinsic "number-to-text" n
instance (Describe Boolean) : b -> if b {"True"} {"False"}
instance (Describe (Maybe value)) where (Describe value) : m -> when m {
  Some value -> "Some _" value
  None -> "None"
}

-- Convert from a piece of `String` to a value.
Read : value => trait (String -> Maybe value)

-- Can't read [`value`] from input.
--
-- You can't use `prompt` with [`value`] because there's no way to convert the
-- contents of a text field into [`value`].
[default] [error] instance (Read value)

instance (Read String) : Some
instance (Read Number) : string -> intrinsic "text-to-number" string

-- Ask the user to enter a value.
prompt :: String -> value where (Read value)
prompt : prompt -> intrinsic "prompt" prompt Read
